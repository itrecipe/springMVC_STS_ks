<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->

	<!-- <annotation-driven /> : @Controller 컨트롤러 애너테이션 역할을 수행 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- jsp 파일을 제외한 나머지 html, css, js 파일과 이미지 파일 등을 사용하기 위해 resources 폴더를 지정한다. -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 컨트롤러 객체에서 반환된 ModelAndView 객체에서 뷰에 해당하는 JSP 파일을 검색하기 위해, 
		 InternalResourceViewResolver 객체를 생성한다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- com.company.hello 패키지 하위에 있는 모든 컴포넌트들을 사용가능 하도록 스캔한다 -->
	<context:component-scan base-package="com.company.hello" />
	
	<!-- MemberService 빈 생성 -->
	<!-- <beans:bean id="memberService" class="com.company.hello.member.MemberService" /> -->
		
</beans:beans>